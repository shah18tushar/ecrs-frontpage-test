{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Tushar/ecrs-frontage-test/src/components/ui/SplitText.jsx"],"sourcesContent":["'use client';\r\nimport { useRef, useEffect } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\nimport { SplitText as GSAPSplitText } from \"gsap/SplitText\";\r\n\r\ngsap.registerPlugin(ScrollTrigger, GSAPSplitText);\r\n\r\nconst SplitText = ({\r\n  text,\r\n  className = \"\",\r\n  delay = 100,\r\n  duration = 0.6,\r\n  ease = \"power3.out\",\r\n  splitType = \"chars\",\r\n  from = { opacity: 0, y: 40 },\r\n  to = { opacity: 1, y: 0 },\r\n  threshold = 0.1,\r\n  rootMargin = \"-100px\",\r\n  textAlign = \"center\",\r\n  onLetterAnimationComplete,\r\n}) => {\r\n  const ref = useRef(null);\r\n  const animationCompletedRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const el = ref.current;\r\n    if (!el || animationCompletedRef.current) return;\r\n\r\n    const absoluteLines = splitType === \"lines\";\r\n    if (absoluteLines) el.style.position = \"relative\";\r\n\r\n    const splitter = new GSAPSplitText(el, {\r\n      type: splitType,\r\n      absolute: absoluteLines,\r\n      linesClass: \"split-line\",\r\n    });\r\n\r\n    let targets;\r\n    switch (splitType) {\r\n      case \"lines\":\r\n        targets = splitter.lines;\r\n        break;\r\n      case \"words\":\r\n        targets = splitter.words;\r\n        break;\r\n      case \"words, chars\":\r\n        targets = [...splitter.words, ...splitter.chars];\r\n        break;\r\n      default:\r\n        targets = splitter.chars;\r\n    }\r\n\r\n    targets.forEach((t) => {\r\n      t.style.willChange = \"transform, opacity\";\r\n    });\r\n\r\n    const startPct = (1 - threshold) * 100;\r\n    const m = /^(-?\\d+)px$/.exec(rootMargin);\r\n    const raw = m ? parseInt(m[1], 10) : 0;\r\n    const sign = raw < 0 ? `-=${Math.abs(raw)}px` : `+=${raw}px`;\r\n    const start = `top ${startPct}%${sign}`;\r\n\r\n    const tl = gsap.timeline({\r\n      scrollTrigger: {\r\n        trigger: el,\r\n        start,\r\n        toggleActions: \"play none none none\",\r\n        once: true,\r\n      },\r\n      smoothChildTiming: true,\r\n      onComplete: () => {\r\n        animationCompletedRef.current = true;\r\n        gsap.set(targets, {\r\n          ...to,\r\n          clearProps: \"willChange\",\r\n          immediateRender: true,\r\n        });\r\n        onLetterAnimationComplete?.();\r\n      },\r\n    });\r\n\r\n    tl.set(targets, { ...from, immediateRender: false, force3D: true });\r\n    tl.to(targets, {\r\n      ...to,\r\n      duration,\r\n      ease,\r\n      stagger: delay / 1000,\r\n      force3D: true,\r\n    });\r\n\r\n    return () => {\r\n      tl.kill();\r\n      ScrollTrigger.getAll().forEach((t) => t.kill());\r\n      gsap.killTweensOf(targets);\r\n      splitter.revert();\r\n    };\r\n  }, [\r\n    text,\r\n    delay,\r\n    duration,\r\n    ease,\r\n    splitType,\r\n    from,\r\n    to,\r\n    threshold,\r\n    rootMargin,\r\n    onLetterAnimationComplete,\r\n    ref,\r\n  ]);\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      className={`split-parent inline-block whitespace-normal ${className}`}\r\n      style={{\r\n        textAlign,\r\n        wordWrap: \"break-word\",\r\n        overflow: \"visible\",\r\n        display: \"inline-block\",\r\n        lineHeight: 1.2,\r\n        paddingBottom: \"0.5em\",\r\n      }}\r\n    >\r\n      {text}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default SplitText;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///D:/Tushar/ecrs-frontage-test/src/components/ui/Threads.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport { Renderer, Program, Mesh, Triangle, Color } from \"ogl\";\r\n\r\nconst vertexShader = `\r\nattribute vec2 position;\r\nattribute vec2 uv;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = vec4(position, 0.0, 1.0);\r\n}\r\n`;\r\n\r\nconst fragmentShader = `\r\nprecision highp float;\r\n\r\nuniform float iTime;\r\nuniform vec3 iResolution;\r\nuniform vec3 uColor;\r\nuniform float uAmplitude;\r\nuniform float uDistance;\r\nuniform vec2 uMouse;\r\n\r\n#define PI 3.1415926538\r\n\r\nconst int u_line_count = 40;\r\nconst float u_line_width = 7.0;\r\nconst float u_line_blur = 10.0;\r\n\r\nfloat Perlin2D(vec2 P) {\r\n    vec2 Pi = floor(P);\r\n    vec4 Pf_Pfmin1 = P.xyxy - vec4(Pi, Pi + 1.0);\r\n    vec4 Pt = vec4(Pi.xy, Pi.xy + 1.0);\r\n    Pt = Pt - floor(Pt * (1.0 / 71.0)) * 71.0;\r\n    Pt += vec2(26.0, 161.0).xyxy;\r\n    Pt *= Pt;\r\n    Pt = Pt.xzxz * Pt.yyww;\r\n    vec4 hash_x = fract(Pt * (1.0 / 951.135664));\r\n    vec4 hash_y = fract(Pt * (1.0 / 642.949883));\r\n    vec4 grad_x = hash_x - 0.49999;\r\n    vec4 grad_y = hash_y - 0.49999;\r\n    vec4 grad_results = inversesqrt(grad_x * grad_x + grad_y * grad_y)\r\n        * (grad_x * Pf_Pfmin1.xzxz + grad_y * Pf_Pfmin1.yyww);\r\n    grad_results *= 1.4142135623730950;\r\n    vec2 blend = Pf_Pfmin1.xy * Pf_Pfmin1.xy * Pf_Pfmin1.xy\r\n               * (Pf_Pfmin1.xy * (Pf_Pfmin1.xy * 6.0 - 15.0) + 10.0);\r\n    vec4 blend2 = vec4(blend, vec2(1.0 - blend));\r\n    return dot(grad_results, blend2.zxzx * blend2.wwyy);\r\n}\r\n\r\nfloat pixel(float count, vec2 resolution) {\r\n    return (1.0 / max(resolution.x, resolution.y)) * count;\r\n}\r\n\r\nfloat lineFn(vec2 st, float width, float perc, float offset, vec2 mouse, float time, float amplitude, float distance) {\r\n    float split_offset = (perc * 0.4);\r\n    float split_point = 0.1 + split_offset;\r\n\r\n    float amplitude_normal = smoothstep(split_point, 0.7, st.x);\r\n    float amplitude_strength = 0.5;\r\n    float finalAmplitude = amplitude_normal * amplitude_strength\r\n                           * amplitude * (1.0 + (mouse.y - 0.5) * 0.2);\r\n\r\n    float time_scaled = time / 10.0 + (mouse.x - 0.5) * 1.0;\r\n    float blur = smoothstep(split_point, split_point + 0.05, st.x) * perc;\r\n\r\n    float xnoise = mix(\r\n        Perlin2D(vec2(time_scaled, st.x + perc) * 2.5),\r\n        Perlin2D(vec2(time_scaled, st.x + time_scaled) * 3.5) / 1.5,\r\n        st.x * 0.3\r\n    );\r\n\r\n    float y = 0.5 + (perc - 0.5) * distance + xnoise / 2.0 * finalAmplitude;\r\n\r\n    float line_start = smoothstep(\r\n        y + (width / 2.0) + (u_line_blur * pixel(1.0, iResolution.xy) * blur),\r\n        y,\r\n        st.y\r\n    );\r\n\r\n    float line_end = smoothstep(\r\n        y,\r\n        y - (width / 2.0) - (u_line_blur * pixel(1.0, iResolution.xy) * blur),\r\n        st.y\r\n    );\r\n\r\n    return clamp(\r\n        (line_start - line_end) * (1.0 - smoothstep(0.0, 1.0, pow(perc, 0.3))),\r\n        0.0,\r\n        1.0\r\n    );\r\n}\r\n\r\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\r\n    vec2 uv = fragCoord / iResolution.xy;\r\n\r\n    float line_strength = 1.0;\r\n    for (int i = 0; i < u_line_count; i++) {\r\n        float p = float(i) / float(u_line_count);\r\n        line_strength *= (1.0 - lineFn(\r\n            uv,\r\n            u_line_width * pixel(1.0, iResolution.xy) * (1.0 - p),\r\n            p,\r\n            (PI * 1.0) * p,\r\n            uMouse,\r\n            iTime,\r\n            uAmplitude,\r\n            uDistance\r\n        ));\r\n    }\r\n\r\n    float colorVal = 1.0 - line_strength;\r\n    fragColor = vec4(uColor * colorVal, colorVal);\r\n}\r\n\r\nvoid main() {\r\n    mainImage(gl_FragColor, gl_FragCoord.xy);\r\n}\r\n`;\r\n\r\nconst Threads = ({\r\n  color = [1, 1, 1],\r\n  amplitude = 1,\r\n  distance = 0,\r\n  enableMouseInteraction = false,\r\n  ...rest\r\n}) => {\r\n  const containerRef = useRef(null);\r\n  const animationFrameId = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!containerRef.current) return;\r\n    const container = containerRef.current;\r\n\r\n    const renderer = new Renderer({ alpha: true });\r\n    const gl = renderer.gl;\r\n    gl.clearColor(0, 0, 0, 0);\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n    container.appendChild(gl.canvas);\r\n\r\n    const geometry = new Triangle(gl);\r\n    const program = new Program(gl, {\r\n      vertex: vertexShader,\r\n      fragment: fragmentShader,\r\n      uniforms: {\r\n        iTime: { value: 0 },\r\n        iResolution: {\r\n          value: new Color(\r\n            gl.canvas.width,\r\n            gl.canvas.height,\r\n            gl.canvas.width / gl.canvas.height\r\n          ),\r\n        },\r\n        uColor: { value: new Color(...color) },\r\n        uAmplitude: { value: amplitude },\r\n        uDistance: { value: distance },\r\n        uMouse: { value: new Float32Array([0.5, 0.5]) },\r\n      },\r\n    });\r\n\r\n    const mesh = new Mesh(gl, { geometry, program });\r\n\r\n    function resize() {\r\n      const { clientWidth, clientHeight } = container;\r\n      renderer.setSize(clientWidth, clientHeight);\r\n      program.uniforms.iResolution.value.r = clientWidth;\r\n      program.uniforms.iResolution.value.g = clientHeight;\r\n      program.uniforms.iResolution.value.b = clientWidth / clientHeight;\r\n    }\r\n    window.addEventListener(\"resize\", resize);\r\n    resize();\r\n\r\n    let currentMouse = [0.5, 0.5];\r\n    let targetMouse = [0.5, 0.5];\r\n\r\n    function handleMouseMove(e) {\r\n      const rect = container.getBoundingClientRect();\r\n      const x = (e.clientX - rect.left) / rect.width;\r\n      const y = 1.0 - (e.clientY - rect.top) / rect.height;\r\n      targetMouse = [x, y];\r\n    }\r\n    function handleMouseLeave() {\r\n      targetMouse = [0.5, 0.5];\r\n    }\r\n    if (enableMouseInteraction) {\r\n      container.addEventListener(\"mousemove\", handleMouseMove);\r\n      container.addEventListener(\"mouseleave\", handleMouseLeave);\r\n    }\r\n\r\n    function update(t) {\r\n      if (enableMouseInteraction) {\r\n        const smoothing = 0.05;\r\n        currentMouse[0] += smoothing * (targetMouse[0] - currentMouse[0]);\r\n        currentMouse[1] += smoothing * (targetMouse[1] - currentMouse[1]);\r\n        program.uniforms.uMouse.value[0] = currentMouse[0];\r\n        program.uniforms.uMouse.value[1] = currentMouse[1];\r\n      } else {\r\n        program.uniforms.uMouse.value[0] = 0.5;\r\n        program.uniforms.uMouse.value[1] = 0.5;\r\n      }\r\n      program.uniforms.iTime.value = t * 0.001;\r\n\r\n      renderer.render({ scene: mesh });\r\n      animationFrameId.current = requestAnimationFrame(update);\r\n    }\r\n    animationFrameId.current = requestAnimationFrame(update);\r\n\r\n    return () => {\r\n      if (animationFrameId.current)\r\n        cancelAnimationFrame(animationFrameId.current);\r\n      window.removeEventListener(\"resize\", resize);\r\n\r\n      if (enableMouseInteraction) {\r\n        container.removeEventListener(\"mousemove\", handleMouseMove);\r\n        container.removeEventListener(\"mouseleave\", handleMouseLeave);\r\n      }\r\n      if (container.contains(gl.canvas)) container.removeChild(gl.canvas);\r\n      gl.getExtension(\"WEBGL_lose_context\")?.loseContext();\r\n    };\r\n  }, [color, amplitude, distance, enableMouseInteraction]);\r\n\r\n  return <div ref={containerRef} className=\"w-full h-full relative\" {...rest} />;\r\n};\r\n\r\nexport default Threads;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///D:/Tushar/ecrs-frontage-test/src/app/about/ournetwork/page.tsx"],"sourcesContent":["// 'use client';\r\n// import React from 'react';\r\n// import networkData from '@/data/network';\r\n// import SplitText from '@/components/ui/SplitText';\r\n// import Threads from '@/components/ui/Threads';\r\n\r\n// const OurNetworkPage = () => {\r\n//     return (\r\n//         <div className=\"text-black\">\r\n//             {/* Hero Section */}\r\n            // <section className=\"relative w-full h-[350px] md:h-[370px] mt-20 overflow-hidden flex items-center justify-center bg-white\">\r\n            //     <div className=\"absolute inset-0 z-0\">\r\n            //         <Threads amplitude={1} distance={0} enableMouseInteraction={true} />\r\n            //     </div>\r\n            //     <div className=\"relative z-10 text-center px-4\">\r\n            //         <SplitText\r\n            //             text=\"Our Network\"\r\n            //             className=\"text-5xl md:text-6xl font-bold text-gray-900\"\r\n            //             delay={80}\r\n            //             duration={0.6}\r\n            //             ease=\"power3.out\"\r\n            //             splitType=\"chars\"\r\n            //             from={{ opacity: 0, y: 30 }}\r\n            //             to={{ opacity: 1, y: 0 }}\r\n            //             threshold={0.1} onLetterAnimationComplete={undefined} />\r\n            //         <p className=\"text-gray-600 mt-4 max-w-xl mx-auto text-lg\">\r\n            //             Explore the extensive reach of ECRS across India – 180+ cities and growing.\r\n            //         </p>\r\n            //     </div>\r\n            // </section>\r\n\r\n//             {/* State and Cities With Map */}\r\n//             <section className=\" px-6 md:px-16 lg:px-24 max-w-7xl mx-auto\">\r\n//                 <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-10\">\r\n//                     {networkData.map((region, index) => (\r\n//                         <div\r\n//                             key={index}\r\n//                             className=\"bg-white rounded-xl shadow border border-gray-200 p-6 hover:shadow-md transition\"\r\n//                         >\r\n//                             <h3 className=\"text-xl font-semibold text-red-600 mb-3\">\r\n//                                 {region.state}\r\n//                             </h3>\r\n//                             <ul className=\"list-disc list-inside space-y-1 text-gray-700\">\r\n//                                 {region.cities.map((city, i) => (\r\n//                                     <li key={i}>{city}</li>\r\n//                                 ))}\r\n//                             </ul>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             </section>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default OurNetworkPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n'use client';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { MapPin, ChevronRight, Search, ZoomOut } from 'lucide-react';\r\nimport SplitText from '@/components/ui/SplitText';\r\nimport Threads from '@/components/ui/Threads';\r\n\r\nconst OurNetworkPage = () => {\r\n    const [selectedState, setSelectedState] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [mapScale, setMapScale] = useState(1);\r\n    const [mapTranslate, setMapTranslate] = useState({ x: 0, y: 0 });\r\n    const [isAnimating, setIsAnimating] = useState(false);\r\n    const mapRef = useRef(null);\r\n    const svgContainerRef = useRef(null);\r\n    const blinkingDotsRef = useRef([]);\r\n\r\n    // Network data with exact coordinates (same as before)\r\n   const networkData = {\r\n        \"Gujarat\": [\r\n            { name: \"Rajkot\", lat: 22.3039, lng: 70.8022 },\r\n            { name: \"Gandhidham\", lat: 23.0800, lng: 70.1333 },\r\n            { name: \"Jamnagar\", lat: 22.4707, lng: 70.0577 },\r\n            { name: \"Bhuj\", lat: 23.2420, lng: 69.6669 },\r\n            { name: \"Vadodara\", lat: 22.3072, lng: 73.1812 },\r\n            { name: \"Bhavnagar\", lat: 21.7645, lng: 72.1519 },\r\n            { name: \"Surat\", lat: 21.1702, lng: 72.8311 },\r\n            { name: \"Ahmedabad\", lat: 23.0225, lng: 72.5714 },\r\n            { name: \"Silvassa\", lat: 20.2738, lng: 72.9960 },\r\n            { name: \"Vapi\", lat: 20.3712, lng: 72.9049 },\r\n            { name: \"Sonmath\", lat: 20.8880, lng: 70.4017 }\r\n        ],\r\n        \"Assam\": [\r\n            { name: \"Silchar\", lat: 24.8333, lng: 92.7789 },\r\n            { name: \"Agartala\", lat: 23.8315, lng: 91.2868 },\r\n            { name: \"Johrat\", lat: 26.7460, lng: 94.2036 },\r\n            { name: \"Dibrugarh\", lat: 27.4728, lng: 94.9120 },\r\n            { name: \"Tezpur\", lat: 26.6330, lng: 92.8000 },\r\n            { name: \"Sivasagar\", lat: 26.9708, lng: 94.6378 },\r\n            { name: \"Guwahati\", lat: 26.1445, lng: 91.7362 }\r\n        ],\r\n        \"Chhattisgarh\": [\r\n            { name: \"Raipur\", lat: 21.2514, lng: 81.6296 },\r\n            { name: \"Bhilai\", lat: 21.1938, lng: 81.3509 },\r\n            { name: \"Bilaspur\", lat: 22.0797, lng: 82.1391 },\r\n            { name: \"Korba\", lat: 22.3595, lng: 82.7501 }\r\n        ],\r\n        \"Rajasthan\": [\r\n            { name: \"Bikaner\", lat: 28.0229, lng: 73.3119 },\r\n            { name: \"Chittodgarh\", lat: 24.8829, lng: 74.6230 },\r\n            { name: \"Hanumangarh\", lat: 29.5814, lng: 74.2700 },\r\n            { name: \"Jaisalmer\", lat: 26.9157, lng: 70.9083 },\r\n            { name: \"Ajmer\", lat: 26.4499, lng: 74.6399 },\r\n            { name: \"Gulabpura\", lat: 25.9100, lng: 74.6500 },\r\n            { name: \"Jodhpur\", lat: 26.2389, lng: 73.0243 },\r\n            { name: \"Kota\", lat: 25.2138, lng: 75.8648 },\r\n            { name: \"Jaipur\", lat: 26.9124, lng: 75.7873 },\r\n            { name: \"Udaipur\", lat: 24.5854, lng: 73.7125 }\r\n        ],\r\n        \"West Bengal\": [\r\n            { name: \"Siliguri\", lat: 26.7271, lng: 88.3953 },\r\n            { name: \"Kolkata\", lat: 22.5726, lng: 88.3639 }\r\n        ],\r\n        \"Odisha\": [\r\n            { name: \"Bhubaneswar\", lat: 20.2961, lng: 85.8245 }\r\n        ],\r\n        \"Andhra Pradesh\": [\r\n            { name: \"Rajahmundry\", lat: 17.0005, lng: 81.8040 },\r\n            { name: \"Kurnool\", lat: 15.8281, lng: 78.0373 },\r\n            { name: \"Vijayawada\", lat: 16.5062, lng: 80.6480 },\r\n            { name: \"Visakhapatnam\", lat: 17.6868, lng: 83.2185 }\r\n        ],\r\n        \"Tamilnadu\": [\r\n            { name: \"Coimbatore\", lat: 11.0168, lng: 76.9558 },\r\n            { name: \"Chennai\", lat: 13.0827, lng: 80.2707 },\r\n            { name: \"Madurai\", lat: 9.9252, lng: 78.1198 },\r\n            { name: \"Trichy\", lat: 10.7905, lng: 78.7047 },\r\n            { name: \"Thanjavur\", lat: 10.7870, lng: 79.1378 },\r\n            { name: \"Pondicherry\", lat: 11.9416, lng: 79.8083 },\r\n            { name: \"Salem\", lat: 11.6643, lng: 78.1460 },\r\n            { name: \"Erode\", lat: 11.3410, lng: 77.7172 },\r\n            { name: \"Tiruppur\", lat: 11.1085, lng: 77.3411 },\r\n            { name: \"Vellore\", lat: 12.9165, lng: 79.1325 }\r\n        ],\r\n        \"Telangana\": [\r\n            { name: \"Hyderabad\", lat: 17.3850, lng: 78.4867 },\r\n            { name: \"Warangal\", lat: 17.9689, lng: 79.5941 },\r\n            { name: \"Nizamabad\", lat: 18.6725, lng: 78.0941 }\r\n        ],\r\n        \"Kerala\": [\r\n            { name: \"Kochi\", lat: 9.9312, lng: 76.2673 },\r\n            { name: \"Thiruvananthapuram\", lat: 8.5241, lng: 76.9366 }\r\n        ],\r\n        \"Uttarakhand\": [\r\n            { name: \"Dehradun\", lat: 30.3165, lng: 78.0322 }\r\n        ],\r\n        \"Maharashtra\": [\r\n            { name: \"Nagpur\", lat: 21.1458, lng: 79.0882 },\r\n            { name: \"Ahmednagar\", lat: 19.0948, lng: 74.7480 },\r\n            { name: \"Mumbai\", lat: 19.0760, lng: 72.8777 },\r\n            { name: \"Aurangabad\", lat: 19.8762, lng: 75.3433 },\r\n            { name: \"Nashik\", lat: 19.9975, lng: 73.7898 },\r\n            { name: \"Latur\", lat: 18.4088, lng: 76.5604 },\r\n            { name: \"Nanded\", lat: 19.1383, lng: 77.3210 },\r\n            { name: \"Sangli\", lat: 16.8524, lng: 74.5815 },\r\n            { name: \"Amravati\", lat: 20.9374, lng: 77.7796 },\r\n            { name: \"Kolhapur\", lat: 16.7050, lng: 74.2433 },\r\n            { name: \"Solapur\", lat: 17.6599, lng: 75.9064 },\r\n            { name: \"Pune\", lat: 18.5204, lng: 73.8567 }\r\n        ],\r\n        \"Uttar Pradesh\": [\r\n            { name: \"Kanpur\", lat: 26.4499, lng: 80.3319 },\r\n            { name: \"Lucknow\", lat: 26.8467, lng: 80.9462 },\r\n            { name: \"Ghaziabad\", lat: 28.6692, lng: 77.4538 },\r\n            { name: \"Agra\", lat: 27.1767, lng: 78.0081 },\r\n            { name: \"Noida\", lat: 28.5355, lng: 77.3910 },\r\n            { name: \"Aligarh\", lat: 27.8974, lng: 78.0880 },\r\n            { name: \"Varanasi\", lat: 25.3176, lng: 82.9739 },\r\n            { name: \"Meerut\", lat: 28.9845, lng: 77.7064 },\r\n            { name: \"Allahabad\", lat: 25.4358, lng: 81.8463 }\r\n        ],\r\n        \"Jharkhand\": [\r\n            { name: \"Jamshedpur\", lat: 22.8046, lng: 86.2029 },\r\n            { name: \"Ranchi\", lat: 23.3441, lng: 85.3096 },\r\n            { name: \"Dhanbad\", lat: 23.7957, lng: 86.4304 },\r\n            { name: \"Bokaro\", lat: 23.6693, lng: 85.9547 }\r\n        ],\r\n        \"Karnataka\": [\r\n            { name: \"Bangalore\", lat: 12.9716, lng: 77.5946 },\r\n            { name: \"Hubli\", lat: 15.3647, lng: 75.1240 },\r\n            { name: \"Mysore\", lat: 12.2958, lng: 76.6394 },\r\n            { name: \"Mangalore\", lat: 12.9141, lng: 74.8560 },\r\n            { name: \"Belgaum\", lat: 15.8497, lng: 74.4977 }\r\n        ],\r\n        \"Punjab\": [\r\n            { name: \"Bathinda\", lat: 30.2110, lng: 74.9455 },\r\n            { name: \"Amritsar\", lat: 31.6340, lng: 74.8723 },\r\n            { name: \"Chandigarh\", lat: 30.7333, lng: 76.7794 },\r\n            { name: \"Jalandhar\", lat: 31.3260, lng: 75.5762 },\r\n            { name: \"Ludhiana\", lat: 30.9010, lng: 75.8573 },\r\n            { name: \"Mohali\", lat: 30.7046, lng: 76.7179 }\r\n        ],\r\n        \"Delhi\": [\r\n            { name: \"Delhi\", lat: 28.7041, lng: 77.1025 }\r\n        ],\r\n        \"Haryana\": [\r\n            { name: \"Faridabad\", lat: 28.4089, lng: 77.3178 },\r\n            { name: \"Gurugram\", lat: 28.4595, lng: 77.0266 },\r\n            { name: \"Sonipat\", lat: 28.9931, lng: 77.0151 },\r\n            { name: \"Panipat\", lat: 29.3909, lng: 76.9635 },\r\n            { name: \"Ambala\", lat: 30.3782, lng: 76.7767 }\r\n        ],\r\n        \"Bihar\": [\r\n            { name: \"Patna\", lat: 25.5941, lng: 85.1376 }\r\n        ]\r\n    };\r\n\r\n    // State boundaries with more accurate paths\r\n    const stateBoundaries = {\r\n        \"Gujarat\": \"M 68.2 20.1 L 74.4 20.1 L 74.4 24.7 L 72.5 24.7 L 72.5 23.0 L 70.0 23.0 L 70.0 21.5 L 68.2 21.5 Z\",\r\n        \"Maharashtra\": \"M 72.6 16.0 L 80.9 16.0 L 80.9 21.1 L 78.5 21.1 L 78.5 19.5 L 76.0 19.5 L 76.0 17.8 L 72.6 17.8 Z\",\r\n        \"Rajasthan\": \"M 69.5 23.0 L 78.2 23.0 L 78.2 30.2 L 73.5 30.2 L 73.5 27.5 L 69.5 27.5 Z\",\r\n        \"Uttar Pradesh\": \"M 77.1 24.0 L 84.6 24.0 L 84.6 30.4 L 80.0 30.4 L 80.0 27.0 L 77.1 27.0 Z\",\r\n        \"Karnataka\": \"M 74.1 11.6 L 78.6 11.6 L 78.6 18.5 L 76.0 18.5 L 76.0 15.0 L 74.1 15.0 Z\",\r\n        \"Tamilnadu\": \"M 76.2 8.1 L 80.3 8.1 L 80.3 13.5 L 78.0 13.5 L 78.0 10.5 L 76.2 10.5 Z\",\r\n        \"Andhra Pradesh\": \"M 77.0 12.6 L 84.8 12.6 L 84.8 19.9 L 80.5 19.9 L 80.5 16.0 L 77.0 16.0 Z\",\r\n        \"West Bengal\": \"M 85.8 21.5 L 89.9 21.5 L 89.9 27.6 L 87.5 27.6 L 87.5 24.5 L 85.8 24.5 Z\",\r\n        \"Telangana\": \"M 77.2 15.9 L 81.0 15.9 L 81.0 19.9 L 79.0 19.9 L 79.0 17.5 L 77.2 17.5 Z\",\r\n        // Add more states with better paths\r\n        \"Punjab\": \"M 73.0 30.5 L 76.5 30.5 L 76.5 33.0 L 73.0 33.0 Z\",\r\n        \"Haryana\": \"M 75.0 27.5 L 77.5 27.5 L 77.5 30.5 L 75.0 30.5 Z\",\r\n        \"Delhi\": \"M 76.0 28.0 L 76.5 28.0 L 76.5 28.5 L 76.0 28.5 Z\",\r\n        \"Uttarakhand\": \"M 77.0 26.0 L 79.0 26.0 L 79.0 28.0 L 77.0 28.0 Z\",\r\n        \"Bihar\": \"M 83.0 25.0 L 86.0 25.0 L 86.0 27.5 L 83.0 27.5 Z\",\r\n        \"Jharkhand\": \"M 83.0 22.0 L 86.0 22.0 L 86.0 25.0 L 83.0 25.0 Z\",\r\n        \"Odisha\": \"M 83.0 19.0 L 87.0 19.0 L 87.0 22.0 L 83.0 22.0 Z\",\r\n        \"Chhattisgarh\": \"M 79.0 19.0 L 83.0 19.0 L 83.0 22.0 L 79.0 22.0 Z\",\r\n        \"Madhya Pradesh\": \"M 73.0 19.0 L 79.0 19.0 L 79.0 24.0 L 73.0 24.0 Z\",\r\n        \"Kerala\": \"M 75.0 8.0 L 78.0 8.0 L 78.0 11.0 L 75.0 11.0 Z\",\r\n        \"Assam\": \"M 88.0 22.0 L 92.0 22.0 L 92.0 26.0 L 88.0 26.0 Z\"\r\n    };\r\n\r\n    // Convert lat/lng to SVG coordinates with better projection\r\n    const convertToSVG = (lat, lng) => {\r\n        // Adjusted bounding box for better coverage\r\n        const minLng = 68.1;\r\n        const maxLng = 97.4;\r\n        const minLat = 6.7;\r\n        const maxLat = 37.1;\r\n        \r\n        // Normalize coordinates\r\n        const x = ((lng - minLng) / (maxLng - minLng)) * 800;\r\n        const y = ((maxLat - lat) / (maxLat - minLat)) * 600;\r\n        \r\n        return { x, y };\r\n    };\r\n\r\n    // Get state center with padding calculation\r\n    const getStateCenter = (stateName) => {\r\n        const cities = networkData[stateName];\r\n        if (!cities || cities.length === 0) return { x: 400, y: 300, scale: 1 };\r\n        \r\n        // Calculate bounding box\r\n        const lats = cities.map(city => city.lat);\r\n        const lngs = cities.map(city => city.lng);\r\n        \r\n        const minLat = Math.min(...lats);\r\n        const maxLat = Math.max(...lats);\r\n        const minLng = Math.min(...lngs);\r\n        const maxLng = Math.max(...lngs);\r\n        \r\n        // Convert to SVG coordinates\r\n        const topLeft = convertToSVG(maxLat, minLng);\r\n        const bottomRight = convertToSVG(minLat, maxLng);\r\n        \r\n        // Calculate center\r\n        const centerX = (topLeft.x + bottomRight.x) / 2;\r\n        const centerY = (topLeft.y + bottomRight.y) / 2;\r\n        \r\n        // Calculate required scale to fit the state in view\r\n        const width = bottomRight.x - topLeft.x;\r\n        const height = bottomRight.y - topLeft.y;\r\n        const viewportWidth = 800 * 0.8; // 80% of SVG width\r\n        const viewportHeight = 600 * 0.8; // 80% of SVG height\r\n        \r\n        const scaleX = viewportWidth / width;\r\n        const scaleY = viewportHeight / height;\r\n        const scale = Math.min(scaleX, scaleY, 3); // Limit max zoom to 3x\r\n        \r\n        return { x: centerX, y: centerY, scale };\r\n    };\r\n\r\n    // Animate to state with smooth transition\r\n    const animateToState = (stateName) => {\r\n        setIsAnimating(true);\r\n        \r\n        if (!stateName) {\r\n            // Reset to full view\r\n            setMapScale(1);\r\n            setMapTranslate({ x: 0, y: 0 });\r\n            setIsAnimating(false);\r\n            return;\r\n        }\r\n        \r\n        const { x, y, scale } = getStateCenter(stateName);\r\n        \r\n        // Calculate translation to center the state\r\n        const svgWidth = 800;\r\n        const svgHeight = 600;\r\n        const translateX = (svgWidth / 2) - (x * scale);\r\n        const translateY = (svgHeight / 2) - (y * scale);\r\n        \r\n        // Apply animation\r\n        setMapScale(scale);\r\n        setMapTranslate({ x: translateX, y: translateY });\r\n        \r\n        // Reset animation flag after transition\r\n        setTimeout(() => setIsAnimating(false), 600);\r\n    };\r\n\r\n    // Handle state selection with animation\r\n    const handleStateSelect = (stateName) => {\r\n        if (isAnimating) return;\r\n        \r\n        if (selectedState === stateName) {\r\n            // Reset zoom\r\n            setSelectedState(null);\r\n            animateToState(null);\r\n        } else {\r\n            setSelectedState(stateName);\r\n            animateToState(stateName);\r\n        }\r\n    };\r\n\r\n    // Initialize blinking animation with better timing\r\n    useEffect(() => {\r\n        const dots = blinkingDotsRef.current;\r\n        \r\n        const interval = setInterval(() => {\r\n            dots.forEach((dot, index) => {\r\n                if (dot) {\r\n                    // Toggle visibility for blinking effect\r\n                    dot.style.opacity = dot.style.opacity === '0.5' ? '1' : '0.5';\r\n                }\r\n            });\r\n        }, 800); // Blink every 800ms\r\n        \r\n        return () => clearInterval(interval);\r\n    }, [selectedState]);\r\n\r\n    // Handle pan and zoom interactions\r\n    useEffect(() => {\r\n        const svgElement = svgContainerRef.current;\r\n        if (!svgElement) return;\r\n\r\n        let isDragging = false;\r\n        let startPos = { x: 0, y: 0 };\r\n\r\n        const handleMouseDown = (e) => {\r\n            isDragging = true;\r\n            startPos = {\r\n                x: e.clientX - mapTranslate.x,\r\n                y: e.clientY - mapTranslate.y\r\n            };\r\n        };\r\n\r\n        const handleMouseMove = (e) => {\r\n            if (!isDragging || isAnimating) return;\r\n            setMapTranslate({\r\n                x: e.clientX - startPos.x,\r\n                y: e.clientY - startPos.y\r\n            });\r\n        };\r\n\r\n        const handleMouseUp = () => {\r\n            isDragging = false;\r\n        };\r\n\r\n        const handleWheel = (e) => {\r\n            e.preventDefault();\r\n            if (isAnimating) return;\r\n            \r\n            const delta = -e.deltaY;\r\n            const scaleFactor = 0.01;\r\n            const newScale = Math.min(Math.max(0.5, mapScale + delta * scaleFactor), 3);\r\n            \r\n            // Adjust translation to zoom toward mouse position\r\n            const rect = svgElement.getBoundingClientRect();\r\n            const mouseX = e.clientX - rect.left;\r\n            const mouseY = e.clientY - rect.top;\r\n            \r\n            const scaleChange = newScale / mapScale;\r\n            setMapTranslate({\r\n                x: mouseX - scaleChange * (mouseX - mapTranslate.x),\r\n                y: mouseY - scaleChange * (mouseY - mapTranslate.y)\r\n            });\r\n            \r\n            setMapScale(newScale);\r\n        };\r\n\r\n        svgElement.addEventListener('mousedown', handleMouseDown);\r\n        svgElement.addEventListener('mousemove', handleMouseMove);\r\n        svgElement.addEventListener('mouseup', handleMouseUp);\r\n        svgElement.addEventListener('mouseleave', handleMouseUp);\r\n        svgElement.addEventListener('wheel', handleWheel);\r\n\r\n        return () => {\r\n            svgElement.removeEventListener('mousedown', handleMouseDown);\r\n            svgElement.removeEventListener('mousemove', handleMouseMove);\r\n            svgElement.removeEventListener('mouseup', handleMouseUp);\r\n            svgElement.removeEventListener('mouseleave', handleMouseUp);\r\n            svgElement.removeEventListener('wheel', handleWheel);\r\n        };\r\n    }, [mapTranslate, mapScale, isAnimating]);\r\n\r\n    // Filter states based on search\r\n    const filteredStates = Object.keys(networkData).filter(state =>\r\n        state.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    // Get cities for display\r\n    const getCitiesToDisplay = () => {\r\n        if (selectedState) {\r\n            return networkData[selectedState] || [];\r\n        }\r\n        return [];\r\n    };\r\n\r\n    // Calculate total cities\r\n    const totalCities = Object.values(networkData).flat().length;\r\n\r\n    return (\r\n        <div className=\"text-black\">\r\n            {/* Hero Section (same as before) */}\r\n             <section className=\"relative w-full h-[350px] md:h-[370px] mt-20 overflow-hidden flex items-center justify-center bg-white\">\r\n                <div className=\"absolute inset-0 z-0\">\r\n                    <Threads amplitude={1} distance={0} enableMouseInteraction={true} />\r\n                </div>\r\n                <div className=\"relative z-10 text-center px-4\">\r\n                    <SplitText\r\n                        text=\"Our Network\"\r\n                        className=\"text-5xl md:text-6xl font-bold text-gray-900\"\r\n                        delay={80}\r\n                        duration={0.6}\r\n                        ease=\"power3.out\"\r\n                        splitType=\"chars\"\r\n                        from={{ opacity: 0, y: 30 }}\r\n                        to={{ opacity: 1, y: 0 }}\r\n                        threshold={0.1} onLetterAnimationComplete={undefined} />\r\n                    <p className=\"text-gray-600 mt-4 max-w-xl mx-auto text-lg\">\r\n                        Explore the extensive reach of ECRS across India – 180+ cities and growing.\r\n                    </p>\r\n                </div>\r\n            </section>\r\n\r\n            {/* State and Cities With Map */}\r\n            <section className=\"py-16 bg-gradient-to-br from-gray-50 to-white\">\r\n                <div className=\"max-w-7xl mx-auto px-4\">\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-8 h-[800px]\">\r\n                        \r\n                        {/* Left Section - States (same as before) */}\r\n                       <div className=\"lg:col-span-3 bg-white rounded-2xl shadow-2xl p-6 border border-gray-100\">\r\n                            <div className=\"mb-6\">\r\n                                <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">States</h3>\r\n                                <div className=\"relative\">\r\n                                    <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Search states...\"\r\n                                        value={searchTerm}\r\n                                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                                        className=\"w-full pl-10 pr-4 py-2 border border-gray-200 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent outline-none\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"space-y-2 overflow-y-auto max-h-[600px] scrollbar-hide\">\r\n                                {filteredStates.map((state, index) => (\r\n                                    <div\r\n                                        key={state}\r\n                                        className={`p-4 rounded-xl cursor-pointer transition-all duration-300 group transform hover:scale-105 ${\r\n                                            selectedState === state\r\n                                                ? 'bg-red-500 text-white shadow-lg scale-105'\r\n                                                : 'bg-gray-50 hover:bg-red-50 hover:shadow-md'\r\n                                        }`}\r\n                                        onClick={() => handleStateSelect(state)}\r\n                                        style={{\r\n                                            animation: `fadeInUp 0.4s ease-out ${index * 0.05}s both`\r\n                                        }}\r\n                                    >\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <div className=\"flex items-center space-x-3\">\r\n                                                <MapPin className={`h-5 w-5 ${selectedState === state ? 'text-white' : 'text-red-500'}`} />\r\n                                                <span className=\"font-semibold\">{state}</span>\r\n                                            </div>\r\n                                            <div className=\"flex items-center space-x-2\">\r\n                                                <span className={`text-sm px-2 py-1 rounded-full ${\r\n                                                    selectedState === state \r\n                                                        ? 'bg-red-400 text-white' \r\n                                                        : 'bg-red-100 text-red-600'\r\n                                                }`}>\r\n                                                    {networkData[state].length}\r\n                                                </span>\r\n                                                <ChevronRight className={`h-4 w-4 transition-transform ${\r\n                                                    selectedState === state ? 'rotate-90' : ''\r\n                                                }`} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Middle Section - Cities */}\r\n                        <div className=\"lg:col-span-4 bg-white rounded-2xl shadow-2xl p-6 border border-gray-100\">\r\n                            <div className=\"mb-6\">\r\n                                <h3 className=\"text-2xl font-bold text-gray-900\">\r\n                                    Cities {selectedState && `in ${selectedState}`}\r\n                                </h3>\r\n                                <p className=\"text-gray-600 mt-2\">\r\n                                    {selectedState ? `${getCitiesToDisplay().length} cities available` : 'Select a state to view cities'}\r\n                                </p>\r\n                            </div>\r\n                            \r\n                            <div className=\"overflow-y-auto max-h-[600px] scrollbar-hide\">\r\n                                {selectedState ? (\r\n                                    <div className=\"grid grid-cols-1 gap-3\">\r\n                                        {getCitiesToDisplay().map((city, index) => (\r\n                                            <div\r\n                                                key={city.name}\r\n                                                className=\"p-3 bg-gray-50 rounded-lg hover:bg-red-50 hover:shadow-md transition-all duration-200 group cursor-pointer transform hover:scale-105\"\r\n                                                style={{\r\n                                                    animation: `fadeInScale 0.3s ease-out ${index * 0.05}s both`\r\n                                                }}\r\n                                            >\r\n                                                <div className=\"flex items-center space-x-3\">\r\n                                                    <div className=\"w-2 h-2 bg-red-500 rounded-full group-hover:animate-pulse\"></div>\r\n                                                    <span className=\"font-medium text-gray-800 group-hover:text-red-600\">\r\n                                                        {city.name}\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"flex items-center justify-center h-40 text-gray-500\">\r\n                                        <div className=\"text-center\">\r\n                                            <MapPin className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\r\n                                            <p>Select a state to view cities</p>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Right Section - Interactive Map */}\r\n                        <div className=\"lg:col-span-5 bg-white rounded-2xl shadow-2xl p-6 border border-gray-100\">\r\n                            <div className=\"mb-6 flex items-center justify-between\">\r\n                                <div>\r\n                                    <h3 className=\"text-2xl font-bold text-gray-900\">Network Map</h3>\r\n                                    <p className=\"text-gray-600 mt-2\">\r\n                                        {selectedState ? `Focused on ${selectedState}` : 'Interactive map of India'}\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"flex space-x-2\">\r\n                                    <button \r\n                                        onClick={() => {\r\n                                            setSelectedState(null);\r\n                                            setMapScale(1);\r\n                                            setMapTranslate({ x: 0, y: 0 });\r\n                                        }}\r\n                                        className=\"p-2 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\r\n                                    >\r\n                                        <ZoomOut className=\"h-4 w-4\" />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"relative h-[600px] bg-gradient-to-br from-blue-50 to-green-50 rounded-xl overflow-hidden\">\r\n                                <svg\r\n                                    ref={mapRef}\r\n                                    viewBox=\"0 0 800 600\"\r\n                                    className=\"w-full h-full cursor-move\"\r\n                                    style={{ \r\n                                        transform: `scale(${mapScale}) translate(${mapTranslate.x}px, ${mapTranslate.y}px)`,\r\n                                        transition: 'transform 0.6s ease-out'\r\n                                    }}\r\n                                >\r\n                                    {/* India Map Outline */}\r\n                                    <path\r\n                                        d=\"M 158 110 L 170 95 L 200 85 L 240 90 L 280 95 L 320 105 L 360 120 L 400 135 L 440 150 L 480 165 L 520 175 L 560 190 L 600 210 L 640 235 L 680 265 L 720 300 L 750 340 L 770 380 L 780 420 L 775 460 L 765 500 L 750 535 L 730 565 L 700 590 L 665 605 L 625 615 L 585 620 L 545 615 L 505 605 L 465 590 L 425 570 L 385 545 L 345 515 L 305 480 L 265 440 L 225 395 L 185 345 L 155 290 L 135 230 L 125 170 L 135 115 L 150 110 Z\"\r\n                                        fill=\"rgba(255, 255, 255, 0.9)\"\r\n                                        stroke=\"rgba(59, 130, 246, 0.6)\"\r\n                                        strokeWidth=\"2\"\r\n                                        className=\"drop-shadow-lg\"\r\n                                    />\r\n                                    \r\n                                    {/* State boundaries */}\r\n                                    {selectedState && stateBoundaries[selectedState] && (\r\n                                        <path\r\n                                            d={stateBoundaries[selectedState]}\r\n                                            fill=\"rgba(239, 68, 68, 0.1)\"\r\n                                            stroke=\"rgba(239, 68, 68, 0.5)\"\r\n                                            strokeWidth=\"2\"\r\n                                            className=\"animate-pulse\"\r\n                                        />\r\n                                    )}\r\n                                    \r\n                                    {/* City markers */}\r\n                                    {selectedState && networkData[selectedState] && networkData[selectedState].map((city, index) => {\r\n                                        const coords = convertToSVG(city.lat, city.lng);\r\n                                        return (\r\n                                            <g key={`${city.name}-${index}`}>\r\n                                                <circle\r\n                                                    cx={coords.x}\r\n                                                    cy={coords.y}\r\n                                                    r=\"8\"\r\n                                                    fill=\"rgba(239, 68, 68, 0.2)\"\r\n                                                    className=\"animate-ping\"\r\n                                                />\r\n                                                <circle\r\n                                                    ref={el => { blinkingDotsRef.current[index] = el; }}\r\n                                                    cx={coords.x}\r\n                                                    cy={coords.y}\r\n                                                    r=\"4\"\r\n                                                    fill=\"#ef4444\"\r\n                                                    className=\"cursor-pointer hover:r-6 transition-all\"\r\n                                                />\r\n                                                <text\r\n                                                    x={coords.x}\r\n                                                    y={coords.y - 15}\r\n                                                    textAnchor=\"middle\"\r\n                                                    className=\"text-xs font-medium fill-gray-700\"\r\n                                                    style={{ fontSize: '10px' }}\r\n                                                >\r\n                                                    {city.name}\r\n                                                </text>\r\n                                            </g>\r\n                                        );\r\n                                    })}\r\n                                    \r\n                                    {/* All cities when no state selected */}\r\n                                    {!selectedState && Object.values(networkData).flat().map((city, index) => {\r\n                                        const coords = convertToSVG(city.lat, city.lng);\r\n                                        return (\r\n                                            <circle\r\n                                                key={`${city.name}-${index}`}\r\n                                                cx={coords.x}\r\n                                                cy={coords.y}\r\n                                                r=\"2\"\r\n                                                fill=\"#ef4444\"\r\n                                                opacity=\"0.6\"\r\n                                                className=\"hover:opacity-100 transition-opacity\"\r\n                                            />\r\n                                        );\r\n                                    })}\r\n                                </svg>\r\n                                \r\n                                {/* Map controls and info */}\r\n                                <div className=\"absolute bottom-4 left-4 right-4 bg-white bg-opacity-95 backdrop-blur-sm rounded-lg p-4 shadow-lg\">\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <div>\r\n                                            <div className=\"flex items-center space-x-2 mb-2\">\r\n                                                <div className=\"w-3 h-3 bg-red-500 rounded-full animate-pulse\"></div>\r\n                                                <span className=\"text-sm font-medium\">\r\n                                                    {selectedState ? `${selectedState} Locations` : 'All Network Locations'}\r\n                                                </span>\r\n                                            </div>\r\n                                            <p className=\"text-xs text-gray-600\">\r\n                                                {selectedState \r\n                                                    ? `${networkData[selectedState].length} cities in ${selectedState}`\r\n                                                    : `${totalCities} cities across India`\r\n                                                }\r\n                                            </p>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <div className=\"text-sm font-bold text-red-600\">\r\n                                                {Object.keys(networkData).length}\r\n                                            </div>\r\n                                            <div className=\"text-xs text-gray-500\">States</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            {/* Statistics Section (same as before) */}\r\n            <section className=\"py-16 bg-white\">\r\n                {/* ... keep existing statistics section ... */}\r\n            </section>\r\n\r\n            {/* Add CSS animations */}\r\n            <style jsx global>{`\r\n                @keyframes fadeInUp {\r\n                    from { opacity: 0; transform: translateY(10px); }\r\n                    to { opacity: 1; transform: translateY(0); }\r\n                }\r\n                @keyframes fadeInScale {\r\n                    from { opacity: 0; transform: scale(0.95); }\r\n                    to { opacity: 1; transform: scale(1); }\r\n                }\r\n                .animate-fade-in {\r\n                    animation: fadeInUp 0.6s ease-out forwards;\r\n                }\r\n                .animate-fade-in-delay {\r\n                    animation: fadeInUp 0.6s ease-out 0.2s forwards;\r\n                    opacity: 0;\r\n                }\r\n                .scrollbar-hide::-webkit-scrollbar {\r\n                    display: none;\r\n                }\r\n                .scrollbar-hide {\r\n                    -ms-overflow-style: none;\r\n                    scrollbar-width: none;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OurNetworkPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// 'use client';\r\n// import React from 'react';\r\n// import SplitText from '@/components/ui/SplitText';\r\n// import Threads from '@/components/ui/Threads';\r\n\r\n// const OurNetworkPage = () => {\r\n//     return (\r\n//         <div className=\"text-black\">\r\n//             {/* Hero Section */}\r\n//             <section className=\"relative w-full h-[350px] md:h-[370px] mt-20 overflow-hidden flex items-center justify-center bg-white\">\r\n//                 <div className=\"absolute inset-0 z-0\">\r\n//                     <Threads amplitude={1} distance={0} enableMouseInteraction={true} />\r\n//                 </div>\r\n//                 <div className=\"relative z-10 text-center px-4\">\r\n//                     <SplitText\r\n//                         text=\"Our Network\"\r\n//                         className=\"text-5xl md:text-6xl font-bold text-gray-900\"\r\n//                         delay={80}\r\n//                         duration={0.6}\r\n//                         ease=\"power3.out\"\r\n//                         splitType=\"chars\"\r\n//                         from={{ opacity: 0, y: 30 }}\r\n//                         to={{ opacity: 1, y: 0 }}\r\n//                         threshold={0.1} onLetterAnimationComplete={undefined} />\r\n//                     <p className=\"text-gray-600 mt-4 max-w-xl mx-auto text-lg\">\r\n//                         Explore the extensive reach of ECRS across India – 180+ cities and growing.\r\n//                     </p>\r\n//                 </div>\r\n//             </section>\r\n\r\n//             {/* State and Cities With Map */}\r\n         \r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default OurNetworkPage;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}